{"version":3,"sources":["webpack://lazyNgZone/webpack/universalModuleDefinition","webpack://lazyNgZone/external \"@angular/core\"","webpack://lazyNgZone/external \"rxjs\"","webpack://lazyNgZone/external \"rxjs/operators\"","webpack://lazyNgZone/./src/index.ts","webpack://lazyNgZone/external \"zone.js/dist/zone\""],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__4__","loader$","ngZoneEventCoalescing","pipe","subscribe","ngZone","enableLongStackTrace","shouldCoalesceEventChangeDetection","hasPendingMacrotasks","hasPendingMicrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","run","fn","applyThis","applyArgs","apply","runTask","name","runGuarded","runOutsideAngular","create","LazyNgZone","lazyNgZone"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,EAAQG,QAAQ,iBAAkBA,QAAQ,QAASA,QAAQ,kBAAmBA,QAAQ,sBAC9E,mBAAXC,QAAyBA,OAAOC,IAC9CD,OAAO,CAAC,gBAAiB,OAAQ,iBAAkB,qBAAsBJ,GAC/C,iBAAZC,QACdA,QAAoB,WAAID,EAAQG,QAAQ,iBAAkBA,QAAQ,QAASA,QAAQ,kBAAmBA,QAAQ,sBAE9GJ,EAAiB,WAAIC,EAAQD,EAAK,iBAAkBA,EAAW,KAAGA,EAAK,kBAAmBA,EAAK,sBARjG,CASGO,MAAM,SAASC,EAAgCC,EAAgCC,EAAgCC,GAClH,O,sFCVAR,EAAOD,QAAUM,G,cCAjBL,EAAOD,QAAUO,G,cCAjBN,EAAOD,QAAUQ,G,6BCAjB,2EAIA,aAII,WAAoBE,EAA0BC,GAA9C,WACED,EAAQE,KACN,qBAAU,WAAM,sBAAK,gDACrBC,WAAU,WACV,EAAKC,OAAS,IAAI,SAAO,CACvBC,qBAAsB,sBACtBC,mCAAoCL,OAmD9C,OA9CI,sBAAW,mCAAoB,C,IAA/B,WACI,QAAON,KAAKS,QAAST,KAAKS,OAAOG,sB,gCAErC,sBAAW,mCAAoB,C,IAA/B,WACE,QAAOZ,KAAKS,QAAST,KAAKS,OAAOI,sB,gCAEnC,sBAAW,uBAAQ,C,IAAnB,WACE,OAAOb,KAAKS,QAAST,KAAKS,OAAOK,U,gCAEnC,sBAAW,yBAAU,C,IAArB,WACE,OAAOd,KAAKS,OAAST,KAAKS,OAAOM,WAAa,IAAI,gB,gCAEpD,sBAAW,+BAAgB,C,IAA3B,WACE,OAAOf,KAAKS,OAAST,KAAKS,OAAOO,iBAAmB,IAAI,gB,gCAE1D,sBAAW,uBAAQ,C,IAAnB,WACE,OAAOhB,KAAKS,OAAST,KAAKS,OAAOQ,SAAW,IAAI,gB,gCAElD,sBAAW,sBAAO,C,IAAlB,WACE,OAAOjB,KAAKS,OAAST,KAAKS,OAAOS,QAAU,IAAI,gB,gCAGjD,YAAAC,IAAA,SAAOC,EAA2BC,EAAiBC,GAC/C,OAAOtB,KAAKS,OAAST,KAAKS,OAAOU,IAAIC,EAAIC,EAAWC,GAAaF,EAAGG,MAAMF,EAAWC,IAEzF,YAAAE,QAAA,SAAWJ,EAA2BC,EAAiBC,EAAmBG,GACtE,OAAOzB,KAAKS,OAAST,KAAKS,OAAOe,QAAQJ,EAAIC,EAAWC,EAAWG,GAAQL,EAAGG,MAAMF,EAAWC,IAEnG,YAAAI,WAAA,SAAcN,EAA2BC,EAAiBC,GACtD,OAAOtB,KAAKS,OAAST,KAAKS,OAAOiB,WAAWN,EAAIC,EAAWC,GAAaF,EAAGG,MAAMF,EAAWC,IAEhG,YAAAK,kBAAA,SAAqBP,GACjB,OAAOpB,KAAKS,OAAST,KAAKS,OAAOkB,kBAAkBP,GAAMA,KAK/C,EAAAQ,OAAd,SAAqBvB,EAAqCC,GAGxD,YAHmB,IAAAD,MAA2B,aAAG,YAAO,IAAAC,OAAA,GACxDuB,EAAWC,WAAa,IAAID,EAAWxB,EAASC,GAEzCuB,EAAWC,YAGpB,sBAAkB,QAAG,C,IAArB,WACE,OAAO9B,KAAK8B,YAAcD,EAAWD,U,gCAE3C,EA7DA,I,cCJAhC,EAAOD,QAAUS,I","file":"0.lazy-ng-zone.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"rxjs\"), require(\"rxjs/operators\"), require(\"zone.js/dist/zone\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"rxjs\", \"rxjs/operators\", \"zone.js/dist/zone\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lazyNgZone\"] = factory(require(\"@angular/core\"), require(\"rxjs\"), require(\"rxjs/operators\"), require(\"zone.js/dist/zone\"));\n\telse\n\t\troot[\"lazyNgZone\"] = factory(root[\"@angular/core\"], root[\"rxjs\"], root[\"rxjs/operators\"], root[\"zone.js/dist/zone\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__4__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","import { EventEmitter, isDevMode, NgZone } from '@angular/core';\r\nimport { from, Observable, of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\nexport class LazyNgZone implements NgZone {\r\n\r\n    private ngZone: NgZone;\r\n\r\n    private constructor(loader$: Observable<any>, ngZoneEventCoalescing: boolean) {\r\n      loader$.pipe(\r\n        switchMap(() => from(import('zone.js/dist/zone')))\r\n      ).subscribe(() => {\r\n        this.ngZone = new NgZone({\r\n          enableLongStackTrace: isDevMode(),\r\n          shouldCoalesceEventChangeDetection: ngZoneEventCoalescing\r\n        });\r\n      })\r\n    }\r\n\r\n    public get hasPendingMacrotasks(): boolean {\r\n        return this.ngZone ? this.ngZone.hasPendingMacrotasks : false;\r\n    };\r\n    public get hasPendingMicrotasks(): boolean {\r\n      return this.ngZone ? this.ngZone.hasPendingMicrotasks : false;\r\n    }\r\n    public get isStable(): boolean {\r\n      return this.ngZone ? this.ngZone.isStable : true;\r\n    }\r\n    public get onUnstable(): EventEmitter<any> {\r\n      return this.ngZone ? this.ngZone.onUnstable : new EventEmitter();\r\n    }\r\n    public get onMicrotaskEmpty(): EventEmitter<any> {\r\n      return this.ngZone ? this.ngZone.onMicrotaskEmpty : new EventEmitter();\r\n    }\r\n    public get onStable(): EventEmitter<any> {\r\n      return this.ngZone ? this.ngZone.onStable : new EventEmitter();\r\n    }\r\n    public get onError(): EventEmitter<any> {\r\n      return this.ngZone ? this.ngZone.onError : new EventEmitter();\r\n    }\r\n\r\n    run<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[]): T {\r\n        return this.ngZone ? this.ngZone.run(fn, applyThis, applyArgs) : fn.apply(applyThis, applyArgs);\r\n    }\r\n    runTask<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[], name?: string): T {\r\n        return this.ngZone ? this.ngZone.runTask(fn, applyThis, applyArgs, name) : fn.apply(applyThis, applyArgs);\r\n    }\r\n    runGuarded<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[]): T {\r\n        return this.ngZone ? this.ngZone.runGuarded(fn, applyThis, applyArgs) : fn.apply(applyThis, applyArgs);\r\n    }\r\n    runOutsideAngular<T>(fn: (...args: any[]) => T): T {\r\n        return this.ngZone ? this.ngZone.runOutsideAngular(fn) : fn();\r\n    }\r\n\r\n    private static lazyNgZone: LazyNgZone;\r\n\r\n    public static create(loader$: Observable<any> = of(null), ngZoneEventCoalescing: boolean = false): LazyNgZone {\r\n      LazyNgZone.lazyNgZone = new LazyNgZone(loader$, ngZoneEventCoalescing);\r\n\r\n      return LazyNgZone.lazyNgZone;\r\n    }\r\n\r\n    public static get get(): LazyNgZone {\r\n      return this.lazyNgZone || LazyNgZone.create();\r\n    }\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;"],"sourceRoot":""}